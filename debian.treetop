grammar Debian
  # Debian package entries do fit any concrete schema, tags can be in almost any order.
  rule test
    #("Depends: ") (dependency ", "?)+
    dependency_line
  end
  rule package
    ((description_tag description_lines) / (generic_tag single_line))+ <DebianSyntaxNode::Package>
  end

  # TAGS
  rule generic_tag
    tag:(!":" .)+ ": " <DebianSyntaxNode::Tag>
  end
  rule description_tag
    tag:"Description" ": " <DebianSyntaxNode::Tag>
  end

  ##### VALUE MATCHING
  rule single_line
    value:(!"\n" .)+ "\n" <DebianSyntaxNode::Value>
  end
  #TODO: All my packages seem to have Description then Homepage. Homepage may need to be generalized to generic_tag!
  rule description_lines
    value:(!"Homepage: " .)+ &"Homepage: " <DebianSyntaxNode::Value>
  end
  rule dependency_line
    "Depends: " (!"\n" dependency ", "?)+ "\n"? <DebianSyntaxNode::DependencyList>
  end

  rule dependency
    substitutable_dependency / comparative_dependency
  end
  rule substitutable_dependency
    package_name (" | " package_name)+ <DebianSyntaxNode::SubstitutableDependency>
  end
  rule comparative_dependency
    package_name " " ("(" dependency_comparator dependency_version ")")? <DebianSyntaxNode::ComparativeDependency>
  end

  rule dependency_comparator
    (!" " .)+ " " <DebianSyntaxNode::DependencyComparator>
  end
  rule dependency_version
    (!")" .)+ &")" <DebianSyntaxNode::DependencyVersion>
  end
  rule package_name
    (![ \)\n] .)+ <DebianSyntaxNode::PackageName>
  end
end
